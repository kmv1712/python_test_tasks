Учим django

Создадим виртуальную среду с названием env.
python3 -m venv env

Активируем виртуальную среду.
source env/bin/activate

Установим библиотеку django в активированую виртуальную среду.
pip install django

Запустим проект django с именем samplesite.
django-admin startproject samplesite

Записать установленные библиотеки в requirement.txt
pip freeze > requirement.txt

Загрузить в проект библиотеки из requirement.txt
pip install -r requirements.txt

Создать новое пустое приложение с именем bboard 
 ./manage.py startapp bboard

Добавить созданое приложение в INSTALLED_APPS
'bboard.apps.BbordConfig'

Запустим генерирование миграции
./manage.py makemigrations bboard

Посмотреть сгенерированый код для СУБД на SQL
./manage.py sqlmigrate bboard 0001

Выполнить сгенерированную миграцию.
./manage.py migrate


1.5.Контроллеры
Контроллер Django(view) - это код, запускаемый в ответ на поступление клиентского запроса, который сожержит интернет-адрес определенного формата. Именно в контроллерах выполняются все действия по подготовке данных для вывода, равно как и обработка данных, поступивших от посетителя  

1.6. Маршруты и маршрутизатор.
Файлы urls

Создадим в файле bboard файл urls.py и укажем 

from django.urls import path

from .views import index

urlpatterns = [
    path('', index),
]

Поправим основной шаблон urls.py 
from django.contrib import admin
from django.urls import path, include

from bboard.views import index

urlpatterns = [
    path('bboard', include('bboard.urls'))
    path('admin/', admin.site.urls),
]


1.7.Модели.
Сама модель должна быть подкласом класса Model

Примеры типов
CharField - обычное строковое поле фиксированной длинны max_length(макс. кол-во символов)
TextField - текстовое поле не ограниченной длины, или memo-поле() null=True, blank=True(значит поле можно не заполнять).
FloatField
DateTimeField

Если указать db_index=True, то поле станет индексируемым.

В Django поле для идентификаторов объявлять не надо.

1.8. Миграции

Миграции - это модуль Python, созданный самим Django на основе определенной модели и предназначенный для формирования в базе данных всех требуемых этой моделью структур: таблиц, полей, индексов, правил и связей.


